name: Build
on:
  push:
    branches:
      - master
      - stable

jobs:
  development-build:
    name: Development Build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v2
      - name: Docker Login
        env:
          
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          
        run: |
          docker login docker.pkg.github.com -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Development Build Script
        run: |
          docker build -f ./server/Dockerfile-dev . -t updatetech:dev
          docker tag updatetech:dev docker.pkg.github.com/mubarak117136/updatetech/updatetech:dev
          docker push docker.pkg.github.com/mubarak117136/updatetech/updatetech:dev
  production-build:
    name: Production Build
    if: github.ref == 'refs/heads/stable'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v2
      - name: Docker Login
        env:
          
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          
        run: |
          docker login docker.pkg.github.com -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Production Build Script
        run: |
          docker build -f ./server/Dockerfile-prod . -t updatetech:prod
          docker tag updatetech:prod docker.pkg.github.com/mubarak117136/updatetech/updatetech:prod
          docker push docker.pkg.github.com/mubarak117136/updatetech/updatetech:prod
  
  # production-deploy:
  #   name: Production Deploy
  #   needs: production-build
  #   if: github.ref == 'refs/heads/stable'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Server SSH Access
  #       uses: garygrossgarten/github-action-ssh@release
  #       with:
  #         host: ${{ secrets.BETOP_SERVER }}
  #         username: ${{ secrets.BETOP_SERVER_USERNAME }}
  #         #password: ${{ secrets.HEALTHWAY_SERVER_PASSWORD }}
  #         passphrase: ""
  #         privateKey: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
  #         port: 22
  #         command: |
  #           cd /www/betop/
  #           docker-compose pull
  #           docker-compose stop
  #           docker-compose up -d
  #           docker-compose exec -T server python ./manage.py migrate
  #           docker-compose exec -T server python ./manage.py collectstatic --noinput
  #           docker image prune -f
  